// Generated by Dagger (https://dagger.dev).
package uz.gita.eventsapp.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import uz.gita.eventsapp.data.local.database.EventDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EventDatabaseModule_ProvideEventDatabaseFactory implements Factory<EventDatabase> {
  private final EventDatabaseModule module;

  private final Provider<Context> contextProvider;

  public EventDatabaseModule_ProvideEventDatabaseFactory(EventDatabaseModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public EventDatabase get() {
    return provideEventDatabase(module, contextProvider.get());
  }

  public static EventDatabaseModule_ProvideEventDatabaseFactory create(EventDatabaseModule module,
      Provider<Context> contextProvider) {
    return new EventDatabaseModule_ProvideEventDatabaseFactory(module, contextProvider);
  }

  public static EventDatabase provideEventDatabase(EventDatabaseModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideEventDatabase(context));
  }
}
