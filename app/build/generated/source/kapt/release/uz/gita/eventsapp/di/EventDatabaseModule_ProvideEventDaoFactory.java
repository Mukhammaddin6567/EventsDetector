// Generated by Dagger (https://dagger.dev).
package uz.gita.eventsapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import uz.gita.eventsapp.data.local.dao.EventDao;
import uz.gita.eventsapp.data.local.database.EventDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EventDatabaseModule_ProvideEventDaoFactory implements Factory<EventDao> {
  private final EventDatabaseModule module;

  private final Provider<EventDatabase> databaseProvider;

  public EventDatabaseModule_ProvideEventDaoFactory(EventDatabaseModule module,
      Provider<EventDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public EventDao get() {
    return provideEventDao(module, databaseProvider.get());
  }

  public static EventDatabaseModule_ProvideEventDaoFactory create(EventDatabaseModule module,
      Provider<EventDatabase> databaseProvider) {
    return new EventDatabaseModule_ProvideEventDaoFactory(module, databaseProvider);
  }

  public static EventDao provideEventDao(EventDatabaseModule instance, EventDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideEventDao(database));
  }
}
