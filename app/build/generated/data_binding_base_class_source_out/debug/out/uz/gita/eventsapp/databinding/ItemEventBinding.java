// Generated by view binder compiler. Do not edit!
package uz.gita.eventsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.eventsapp.R;

public final class ItemEventBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayoutCompat container;

  @NonNull
  public final ShapeableImageView imageEvent;

  @NonNull
  public final SwitchMaterial statusEvent;

  @NonNull
  public final TextView textEvent;

  private ItemEventBinding(@NonNull CardView rootView, @NonNull LinearLayoutCompat container,
      @NonNull ShapeableImageView imageEvent, @NonNull SwitchMaterial statusEvent,
      @NonNull TextView textEvent) {
    this.rootView = rootView;
    this.container = container;
    this.imageEvent = imageEvent;
    this.statusEvent = statusEvent;
    this.textEvent = textEvent;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayoutCompat container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.imageEvent;
      ShapeableImageView imageEvent = ViewBindings.findChildViewById(rootView, id);
      if (imageEvent == null) {
        break missingId;
      }

      id = R.id.statusEvent;
      SwitchMaterial statusEvent = ViewBindings.findChildViewById(rootView, id);
      if (statusEvent == null) {
        break missingId;
      }

      id = R.id.textEvent;
      TextView textEvent = ViewBindings.findChildViewById(rootView, id);
      if (textEvent == null) {
        break missingId;
      }

      return new ItemEventBinding((CardView) rootView, container, imageEvent, statusEvent,
          textEvent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
