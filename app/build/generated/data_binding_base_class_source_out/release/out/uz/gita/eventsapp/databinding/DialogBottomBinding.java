// Generated by view binder compiler. Do not edit!
package uz.gita.eventsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.eventsapp.R;

public final class DialogBottomBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView buttonDisableAllEvents;

  @NonNull
  public final TextView buttonEnableAllEvents;

  @NonNull
  public final TextView buttonQuit;

  @NonNull
  public final TextView buttonRate;

  @NonNull
  public final TextView buttonShare;

  @NonNull
  public final AppCompatImageView line;

  private DialogBottomBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView buttonDisableAllEvents, @NonNull TextView buttonEnableAllEvents,
      @NonNull TextView buttonQuit, @NonNull TextView buttonRate, @NonNull TextView buttonShare,
      @NonNull AppCompatImageView line) {
    this.rootView = rootView;
    this.buttonDisableAllEvents = buttonDisableAllEvents;
    this.buttonEnableAllEvents = buttonEnableAllEvents;
    this.buttonQuit = buttonQuit;
    this.buttonRate = buttonRate;
    this.buttonShare = buttonShare;
    this.line = line;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogBottomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogBottomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_bottom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogBottomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDisableAllEvents;
      TextView buttonDisableAllEvents = ViewBindings.findChildViewById(rootView, id);
      if (buttonDisableAllEvents == null) {
        break missingId;
      }

      id = R.id.buttonEnableAllEvents;
      TextView buttonEnableAllEvents = ViewBindings.findChildViewById(rootView, id);
      if (buttonEnableAllEvents == null) {
        break missingId;
      }

      id = R.id.buttonQuit;
      TextView buttonQuit = ViewBindings.findChildViewById(rootView, id);
      if (buttonQuit == null) {
        break missingId;
      }

      id = R.id.buttonRate;
      TextView buttonRate = ViewBindings.findChildViewById(rootView, id);
      if (buttonRate == null) {
        break missingId;
      }

      id = R.id.buttonShare;
      TextView buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.line;
      AppCompatImageView line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      return new DialogBottomBinding((ConstraintLayout) rootView, buttonDisableAllEvents,
          buttonEnableAllEvents, buttonQuit, buttonRate, buttonShare, line);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
